<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="updatedContent" value="# The Cairo Times&#10;&#10;A modern Android news application built with Jetpack Compose, providing users with an elegant interface to access news content through The New York Times API.&#10;&#10;## Features&#10;&#10;- **Animated Landing Page**: Smooth animations with background imagery and dynamic text positioning&#10;- **User Authentication**: Secure login functionality with form validation&#10;- **News Feed**: Browse and read news articles from The New York Times&#10;- **Modern UI**: Built entirely with Jetpack Compose for a native Android experience&#10;- **Custom Typography**: Integrated custom fonts for enhanced visual appeal&#10;- **Responsive Design**: Optimized layouts for various screen sizes&#10;&#10;## Architecture&#10;&#10;The application follows modern Android development patterns:&#10;&#10;- **MVVM Architecture**: Clear separation of concerns using ViewModels&#10;- **Jetpack Navigation**: Seamless navigation between screens&#10;- **Compose UI**: Modern declarative UI toolkit&#10;- **Repository Pattern**: Centralized data management&#10;- **Retrofit Integration**: RESTful API communication&#10;&#10;## Tech Stack&#10;&#10;- **Language**: Kotlin&#10;- **UI Framework**: Jetpack Compose&#10;- **Minimum SDK**: 24 (Android 7.0)&#10;- **Target SDK**: 36&#10;- **Navigation**: Navigation Compose&#10;- **Networking**: Retrofit 2.9.0 with Gson converter&#10;- **Image Loading**: Coil for Compose&#10;- **Architecture Components**: ViewModel, LiveData&#10;&#10;## Project Structure&#10;&#10;```&#10;app/src/main/java/com/cocochanel/trial/&#10;├── MainActivity.kt                    # Main application entry point&#10;├── data/&#10;│   ├── model/                        # Data models&#10;│   └── repository/                   # Data layer implementation&#10;└── ui/&#10;    ├── features/&#10;    │   ├── landingpage/              # Landing screen with animations&#10;    │   ├── loginpage/                # Authentication interface&#10;    │   ├── newspage/                 # News feed display&#10;    │   └── newsdetailspage/          # Article details view&#10;    └── theme/                        # App theming and styling&#10;```&#10;&#10;## Setup Instructions&#10;&#10;### Prerequisites&#10;&#10;- Android Studio Arctic Fox or later&#10;- JDK 11&#10;- Android SDK with API level 36&#10;- New York Times API key&#10;&#10;### Installation&#10;&#10;1. Clone the repository&#10;2. Open the project in Android Studio&#10;3. Create a `local.properties` file in the root directory&#10;4. Add your New York Times API key:&#10;   ```&#10;   nytimes.api.key=YOUR_API_KEY_HERE&#10;   ```&#10;5. Sync the project with Gradle files&#10;6. Run the application on an emulator or physical device&#10;&#10;### API Key Setup&#10;&#10;This application requires a New York Times API key to fetch news content. &#10;&#10;1. Visit the [New York Times Developer Portal](https://developer.nytimes.com/)&#10;2. Create an account and register a new application&#10;3. Generate an API key for the Article Search API&#10;4. Add the key to your `local.properties` file as shown above&#10;&#10;## Dependencies&#10;&#10;### Core Android&#10;- Kotlin 1.9+&#10;- AndroidX Core KTX&#10;- AndroidX Lifecycle Runtime&#10;- AndroidX Activity Compose&#10;&#10;### UI and Compose&#10;- Jetpack Compose BOM&#10;- Material Design 3&#10;- Navigation Compose&#10;- Material Icons Extended&#10;- Coil for image loading&#10;&#10;### Networking&#10;- Retrofit 2.9.0&#10;- Gson Converter&#10;- OkHttp Logging Interceptor&#10;&#10;### Architecture&#10;- ViewModel Compose&#10;- Lifecycle ViewModel KTX&#10;&#10;## Build Configuration&#10;&#10;- **Application ID**: com.cocochanel.trial&#10;- **Version Code**: 1&#10;- **Version Name**: 1.0&#10;- **Compile SDK**: 36&#10;- **Min SDK**: 24&#10;- **Target SDK**: 36&#10;&#10;## Security&#10;&#10;- API keys are stored securely in `local.properties` and not committed to version control&#10;- ProGuard configuration included for release builds&#10;- Input validation implemented for user authentication&#10;&#10;## Testing&#10;&#10;The project includes:&#10;- Unit tests using JUnit&#10;- Instrumented tests using AndroidX Test framework&#10;- Compose UI tests for user interface validation&#10;&#10;## Contributing&#10;&#10;1. Fork the repository&#10;2. Create a feature branch&#10;3. Make your changes&#10;4. Add appropriate tests&#10;5. Submit a pull request&#10;&#10;## License&#10;&#10;This project is developed as part of an educational initiative. Please refer to the license file for detailed usage terms.&#10;&#10;## Contact&#10;&#10;For questions or support regarding this application, please refer to the project documentation or submit an issue through the repository." />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>